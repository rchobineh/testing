{"ast":null,"code":"var _jsxFileName = \"/Users/Roya/Desktop/developerFolio/src/components/experienceCard/ExperienceCard.js\";\nimport React, { useState, createRef } from \"react\";\nimport \"./ExperienceCard.scss\"; // import ColorThief from \"colorthief\";\n\nexport default function ExperienceCard(_ref) {\n  let {\n    cardInfo,\n    isDark\n  } = _ref;\n  const [colorArrays, setColorArrays] = useState([]); // const imgRef = createRef();\n  // function getColorArrays() {\n  //   const colorThief = new ColorThief();\n  //   setColorArrays(colorThief.getColor(imgRef.current));\n  // }\n\n  function rgb(values) {\n    return typeof values === \"undefined\" ? null : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = _ref2 => {\n    let {\n      descBullets,\n      isDark\n    } = _ref2;\n    return descBullets ? descBullets.map((item, i) => /*#__PURE__*/React.createElement(\"li\", {\n      key: i,\n      className: isDark ? \"subTitle dark-mode-text\" : \"subTitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, item)) : null;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: isDark ? \"experience-card-dark\" : \"experience-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      background: rgb(colorArrays)\n    },\n    className: \"experience-banner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-blurred_div\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-div-company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"experience-text-company\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, cardInfo.company))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"experience-text-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: isDark ? \"experience-text-role dark-mode-text\" : \"experience-text-role\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, cardInfo.role), /*#__PURE__*/React.createElement(\"h5\", {\n    className: isDark ? \"experience-text-date dark-mode-text\" : \"experience-text-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, cardInfo.date), /*#__PURE__*/React.createElement(\"p\", {\n    className: isDark ? \"subTitle experience-text-desc dark-mode-text\" : \"subTitle experience-text-desc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, cardInfo.desc), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GetDescBullets, {\n    descBullets: cardInfo.descBullets,\n    isDark: isDark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/Roya/Desktop/developerFolio/src/components/experienceCard/ExperienceCard.js"],"names":["React","useState","createRef","ExperienceCard","cardInfo","isDark","colorArrays","setColorArrays","rgb","values","join","GetDescBullets","descBullets","map","item","i","background","company","role","date","desc"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAO,uBAAP,C,CACA;;AAEA,eAAe,SAASC,cAAT,OAA4C;AAAA,MAApB;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAoB;AACzD,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CADyD,CAEzD;AAEA;AACA;AACA;AACA;;AAEA,WAASO,GAAT,CAAaC,MAAb,EAAqB;AACnB,WAAO,OAAOA,MAAP,KAAkB,WAAlB,GACH,IADG,GAEH,SAASA,MAAM,CAACC,IAAP,CAAY,IAAZ,CAAT,GAA6B,GAFjC;AAGD;;AAED,QAAMC,cAAc,GAAG,SAA2B;AAAA,QAA1B;AAACC,MAAAA,WAAD;AAAcP,MAAAA;AAAd,KAA0B;AAChD,WAAOO,WAAW,GACdA,WAAW,CAACC,GAAZ,CAAgB,CAACC,IAAD,EAAOC,CAAP,kBACd;AACE,MAAA,GAAG,EAAEA,CADP;AAEE,MAAA,SAAS,EAAEV,MAAM,GAAG,yBAAH,GAA+B,UAFlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGS,IAJH,CADF,CADc,GASd,IATJ;AAUD,GAXD;;AAaA,sBACE;AAAK,IAAA,SAAS,EAAET,MAAM,GAAG,sBAAH,GAA4B,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAE;AAACW,MAAAA,UAAU,EAAER,GAAG,CAACF,WAAD;AAAhB,KAAZ;AAA4C,IAAA,SAAS,EAAC,mBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,QAAQ,CAACa,OAAlD,CADF,CAFF,CADF,eAgBE;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EACPZ,MAAM,GACF,qCADE,GAEF,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,QAAQ,CAACc,IAPZ,CADF,eAUE;AACE,IAAA,SAAS,EACPb,MAAM,GACF,qCADE,GAEF,sBAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,QAAQ,CAACe,IAPZ,CAVF,eAmBE;AACE,IAAA,SAAS,EACPd,MAAM,GACF,8CADE,GAEF,+BAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,QAAQ,CAACgB,IAPZ,CAnBF,eA4BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEhB,QAAQ,CAACQ,WAAtC;AAAmD,IAAA,MAAM,EAAEP,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA5BF,CAhBF,CADF;AAmDD","sourcesContent":["import React, {useState, createRef} from \"react\";\nimport \"./ExperienceCard.scss\";\n// import ColorThief from \"colorthief\";\n\nexport default function ExperienceCard({cardInfo, isDark}) {\n  const [colorArrays, setColorArrays] = useState([]);\n  // const imgRef = createRef();\n\n  // function getColorArrays() {\n  //   const colorThief = new ColorThief();\n  //   setColorArrays(colorThief.getColor(imgRef.current));\n  // }\n\n  function rgb(values) {\n    return typeof values === \"undefined\"\n      ? null\n      : \"rgb(\" + values.join(\", \") + \")\";\n  }\n\n  const GetDescBullets = ({descBullets, isDark}) => {\n    return descBullets\n      ? descBullets.map((item, i) => (\n          <li\n            key={i}\n            className={isDark ? \"subTitle dark-mode-text\" : \"subTitle\"}\n          >\n            {item}\n          </li>\n        ))\n      : null;\n  };\n\n  return (\n    <div className={isDark ? \"experience-card-dark\" : \"experience-card\"}>\n      <div style={{background: rgb(colorArrays)}} className=\"experience-banner\">\n        <div className=\"experience-blurred_div\"></div>\n        <div className=\"experience-div-company\">\n          <h5 className=\"experience-text-company\">{cardInfo.company}</h5>\n        </div>\n\n        {/* <img\n          crossOrigin={\"anonymous\"}\n          ref={imgRef}\n          className=\"experience-roundedimg\"\n          src={cardInfo.companylogo}\n          alt={cardInfo.company}\n          onLoad={() => getColorArrays()}\n        /> */}\n      </div>\n      <div className=\"experience-text-details\">\n        <h5\n          className={\n            isDark\n              ? \"experience-text-role dark-mode-text\"\n              : \"experience-text-role\"\n          }\n        >\n          {cardInfo.role}\n        </h5>\n        <h5\n          className={\n            isDark\n              ? \"experience-text-date dark-mode-text\"\n              : \"experience-text-date\"\n          }\n        >\n          {cardInfo.date}\n        </h5>\n        <p\n          className={\n            isDark\n              ? \"subTitle experience-text-desc dark-mode-text\"\n              : \"subTitle experience-text-desc\"\n          }\n        >\n          {cardInfo.desc}\n        </p>\n        <ul>\n          <GetDescBullets descBullets={cardInfo.descBullets} isDark={isDark} />\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}